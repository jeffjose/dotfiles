#!/bin/bash
#
# Jeffrey Jose | Jan 17, 2021
#

# Constants
DOTFILES_DIR="$HOME/dotfiles"
DEFAULT_USER="jeffjose"
DEFAULT_EMAIL="jeffjosejeff@gmail.com"
SSH_KEY_PATH="$HOME/.ssh/id_rsa"

# Track task status
declare -a failed_tasks=()
declare -a warning_tasks=()
declare -i total_tasks=0

# Function to run a task and track its success/failure
run_task() {
  local task_name="$1"
  shift
  ((total_tasks++))
  echo -e "\nüì¶ $task_name..."
  if "$@" 2>/tmp/task_error; then
    echo "‚úÖ $task_name completed successfully"
    return 0
  else
    local exit_code=$?
    if [ $exit_code -eq 1 ]; then
      echo "‚ö†Ô∏è  $task_name completed with warnings"
      warning_tasks+=("$task_name ($(cat /tmp/task_error))")
    else
      echo "‚ùå $task_name failed"
      failed_tasks+=("$task_name ($(cat /tmp/task_error))")
    fi
    return $exit_code
  fi
}

# Print usage information
usage() {
  echo "Usage: firstrun [base|server|gui]"
  echo "  base   - Basic system setup"
  echo "  server - Server setup (includes base)"
  echo "  gui    - GUI setup (includes server)"
  exit 1
}

# Run common setup tasks
run_setup() {
  echo -e "\nüîÑ Running Common Setup"
  echo "-----------------------------------"
  run_task "Running setup script" "$DOTFILES_DIR/setup"
}

# Base setup tasks
run_base() {
  echo -e "\nüîÑ Running Base Setup"
  echo "-----------------------------------"

  run_task "Setting up user" "$DOTFILES_DIR/setup_user" "$DEFAULT_USER"
  run_task "Installing base packages" "$DOTFILES_DIR/apt-base.sh"
  run_task "Setting up base PPAs" "$DOTFILES_DIR/ppa-base.sh"
  run_task "Patching NTP config" sudo patch -f /etc/ntp.conf ntp.patch
  run_task "Cleaning packages" sudo apt autoremove
  run_task "Setting up Vim" "$DOTFILES_DIR/vim.sh"

  # Install Rust and cargo packages
  echo -e "\nüì¶ Installing Rust..."
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  run_task "Installing timeago-cli" "$HOME/.cargo/bin/cargo" install timeago-cli

  # Setup SSH
  echo -e "\nüì¶ Setting up SSH..."
  if [ ! -f "$SSH_KEY_PATH" ]; then
    run_task "Generating SSH key" ssh-keygen -t rsa -b 4096 -C "$DEFAULT_EMAIL" -f "$SSH_KEY_PATH" -q -N ""
  fi
  run_task "Adding SSH key" ssh-add "$SSH_KEY_PATH"

  # Set default shell
  run_task "Setting default shell" sudo chsh -s /bin/tcsh "$DEFAULT_USER"
}

# Common server and GUI tasks
run_common_server_gui() {
  echo -e "\nüîÑ Running Common Server/GUI Setup"
  echo "-----------------------------------"

  # Install Linuxbrew
  echo -e "\nüì¶ Installing Linuxbrew..."
  yes | sh -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  # Install various packages
  run_task "Setting up Cargo packages" "$DOTFILES_DIR/cargo.sh"
  run_task "Setting up Go packages" "$DOTFILES_DIR/go.sh"
  run_task "Setting up fonts" "$DOTFILES_DIR/fonts.sh"
  run_task "Setting up Podman" "$DOTFILES_DIR/podman.sh"
  run_task "Setting up pip packages" "$DOTFILES_DIR/pip.sh"
}

# Server setup tasks
run_server() {
  echo -e "\nüîÑ Running Server Setup"
  echo "-----------------------------------"

  run_base
  run_task "Installing server packages" "$DOTFILES_DIR/apt-server.sh"
  run_task "Setting up server PPAs" "$DOTFILES_DIR/ppa-server.sh"
  run_common_server_gui
}

# GUI setup tasks
run_gui() {
  echo -e "\nüîÑ Running GUI Setup"
  echo "-----------------------------------"

  run_server

  run_task "Installing GUI packages" "$DOTFILES_DIR/apt-gui.sh"
  run_task "Setting up GUI PPAs" "$DOTFILES_DIR/ppa-gui.sh"

  # Install and setup Espanso
  run_task "Installing Espanso" sudo snap install espanso --classic
  run_task "Setting up Espanso" "$DOTFILES_DIR/espanso.sh"

  # Android setup
  run_task "Setting up Android" sudo usermod -aG plugdev "$DEFAULT_USER"
  run_task "Installing Android tools" sudo apt install android-sdk-platform-tools-common

  # VS Code theme setup
  echo -e "\nüì¶ Setting up VS Code theme..."
  rm -rf "$HOME/.vscode/extensions/material-theme-jeffjose"
  mkdir -p "$HOME/.vscode/extensions"
  run_task "Installing VS Code theme" cp -r "$DOTFILES_DIR/material-theme-jeffjose" "$HOME/.vscode/extensions/material-theme-jeffjose"

  # Terminal setup
  run_task "Setting up Tilix" dconf load /com/gexperts/Tilix/ <tilix.dconf
  run_task "Setting up XFCE" "$DOTFILES_DIR/xfce.sh"

  # Print manual steps
  echo -e "\nüìã Manual Steps Required:"
  echo "1. Install Chrome (run 'update_chrome')"
  echo "2. Install VS Code (run 'update_code')"
  echo "3. Install Neovim (run 'update_vim')"
  echo "4. Install Android Studio:"
  echo "   a. Set correct Java alternative:"
  echo "      sudo update-alternatives --config java"
  echo "      Select: /usr/lib/jvm/java-13-openjdk-amd64/bin/java"
  echo "   b. Use Java 8, set JAVA_HOME and accept licenses:"
  echo "      yes | sdkmanager --licenses"
}

# Main script execution
case "$1" in
base)
  echo "üöÄ Starting Base Setup"
  echo "-----------------------------------"
  run_base || true
  run_setup || true
  ;;
server)
  echo "üöÄ Starting Server Setup"
  echo "-----------------------------------"
  run_server || true
  run_setup || true
  ;;
gui)
  echo "üöÄ Starting GUI Setup"
  echo "-----------------------------------"
  run_gui || true
  run_setup || true
  ;;
*)
  usage
  ;;
esac

# Print summary
echo -e "\n-----------------------------------"
echo "üìã Setup Summary:"
echo "Total tasks: $total_tasks"
echo "Successful: $((total_tasks - ${#warning_tasks[@]} - ${#failed_tasks[@]}))"

if [ ${#warning_tasks[@]} -gt 0 ]; then
  echo -e "\n‚ö†Ô∏è  Tasks with warnings (${#warning_tasks[@]}):"
  printf '%s\n' "${warning_tasks[@]}"
fi

if [ ${#failed_tasks[@]} -gt 0 ]; then
  echo -e "\n‚ùå Failed tasks (${#failed_tasks[@]}):"
  printf '%s\n' "${failed_tasks[@]}"
fi

if [ ${#failed_tasks[@]} -eq 0 ] && [ ${#warning_tasks[@]} -eq 0 ]; then
  echo -e "\n‚ú® All tasks completed successfully!"
else
  echo -e "\nüîÑ Setup completed with some issues"
fi

# Always exit with success
exit 0
